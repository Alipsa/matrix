buildscript {
  dependencies {
    classpath 'se.alipsa.groovy:nexus-release-plugin:1.0.0-SNAPSHOT'
  }
}
plugins {
  id 'groovy'
  id 'java-library'
  id 'signing'
  id 'maven-publish'
}

group 'se.alipsa.groovy'
version '1.2.5-SNAPSHOT'
description = "Groovy library for working with matrix ([][] data)"

ext.nexusUrl = version.contains("SNAPSHOT")
    ? "https://oss.sonatype.org/content/repositories/snapshots/"
    : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

repositories {
  mavenCentral()
  mavenLocal()
}

sourceSets {
  main {
    java { srcDirs = [] }    // no source dirs for the java compiler
    groovy { srcDirs = ["src/main/java", "src/main/groovy"] }  // compile   everything in src/ with groovy
  }
}

dependencies {
  def groovyVersion = '4.0.22'
  def groovy = "org.apache.groovy:groovy:$groovyVersion"
  compileOnly groovy
  //compileOnly "org.apache.groovy:groovy-ginq:$groovyVersion"
  testImplementation groovy
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
  testImplementation 'org.apache.commons:commons-math3:3.6.1'
  testImplementation 'com.h2database:h2:2.3.232'
  testImplementation "org.apache.groovy:groovy-sql:$groovyVersion"
  //testImplementation "org.apache.groovy:groovy-ginq:$groovyVersion"
}

test {
  testLogging.showStandardStreams = true
  useJUnitPlatform()
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
  archiveClassifier.set 'javadoc'
  from groovydoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier.set 'sources'
  from sourceSets.main.allSource
}


//Maven Central uploads
publishing {
  publications {
    maven(MavenPublication) {
      from components.java

      artifact(javadocJar)
      artifact(sourcesJar)
      pom {
        name = 'Matrix Core'
        description = "${project.description}"
        url = "https://github.com/Alipsa/matrix"
        licenses {
          license {
            name = 'MIT License'
            url = 'https://raw.githubusercontent.com/Alipsa/matrix/main/matrix-core/LICENSE'
          }
        }
        developers {
          developer {
            id = 'perNyfelt'
            name = 'Per Nyfelt'
          }
        }
        scm {
          url = 'https://github.com/Alipsa/matrix/tree/main/matrix-core'
          connection = 'scm:git:https://github.com/Alipsa/matrix.git'
          developerConnection = 'scm:git:https://github.com/Alipsa/matrix.git'
        }
      }
    }
  }
  if (project.ext.properties.sonatypeUsername) {
    repositories {
      maven {
        credentials {
          username = sonatypeUsername
          password = sonatypePassword
        }
        url = nexusUrl
      }
    }
  }
  //logger.lifecycle("Log in to https://oss.sonatype.org/index.htm to release the deployment")
}

signing {
  if (project.properties['signing.keyId'] != null) {
    project.logger.lifecycle("Signing artifacts...")
    sign publishing.publications.maven
    //sign configurations.archives
  } else {
    project.logger.lifecycle("signing.keyId is not defined, skipping signing of artifacts...")
  }
}

if (project.ext.properties.sonatypeUsername) {

  apply plugin: 'nexus-release-plugin'
  //apply plugin: 'se.alipsa.groovy.NexusReleasePlugin'
  nexusReleasePlugin.nexusUrl = nexusUrl
  nexusReleasePlugin.userName = sonatypeUsername
  nexusReleasePlugin.password = sonatypePassword
}