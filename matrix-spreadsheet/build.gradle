buildscript {
    dependencies {
        classpath 'se.alipsa.groovy:nexus-release-plugin:1.0.0-SNAPSHOT'
    }
}
plugins {
    id 'groovy'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
}

group 'se.alipsa.groovy'
version '1.0.2-SNAPSHOT'
description 'Groovy spreadsheet import/export'

ext.nexusUrl = version.contains("SNAPSHOT")
    ? "https://oss.sonatype.org/content/repositories/snapshots/"
    : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

repositories {
    if (version.contains('SNAPSHOT')) {
        mavenLocal()
    }
    mavenCentral()
}

dependencies {
    def groovy = 'org.apache.groovy:groovy:4.0.20'
    compileOnly groovy
    //api project(':matrix-core')
    compileOnly('se.alipsa.groovy:matrix-core:1.2.3')
    implementation('org.apache.poi:poi:5.2.5')
    implementation('org.apache.poi:poi-ooxml:5.2.5')
    implementation 'com.github.miachm.sods:SODS:1.6.7'

    testImplementation('se.alipsa.groovy:matrix-core:1.2.3')
    testImplementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation groovy
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    useJUnitPlatform()
}

//Maven Central uploads
task javadocJar(type: Jar, dependsOn: groovydoc) {
    archiveClassifier.set('javadoc')
    from groovydoc.destinationDir
}


task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact(javadocJar)
            artifact(sourcesJar)
            pom {
                name = 'Groovy spreadsheet import/export'
                description = "${project.description}"
                url = "https://github.com/Alipsa/matrix/matrix-spreadsheet"
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/Alipsa/matrix/matrix-spreadsheet/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'perNyfelt'
                        name = 'Per Nyfelt'
                    }
                }
                scm {
                    url = 'https://github.com/Alipsa/matrix/matrix-spreadsheet/tree/master'
                    connection = 'scm:git:https://github.com/Alipsa/matrix.git'
                    developerConnection = 'scm:git:https://github.com/Alipsa/matrix.git'
                }
            }
        }
    }
    if (project.ext.properties.sonatypeUsername) {
        repositories {
            maven {
                credentials {
                    username = sonatypeUsername
                    password = sonatypePassword
                }
                url = nexusUrl
            }
        }
    }
}

signing {
    if (project.properties['signing.keyId'] != null) {
        project.logger.lifecycle("Signing artifacts...")
        sign publishing.publications.maven
    } else {
        project.logger.lifecycle("signing.keyId is not defined, skipping signing of artifacts...")
    }
}

if (project.ext.properties.sonatypeUsername) {
    apply plugin: 'nexus-release-plugin'
    nexusReleasePlugin.nexusUrl = nexusUrl
    nexusReleasePlugin.userName = sonatypeUsername
    nexusReleasePlugin.password = sonatypePassword
}
