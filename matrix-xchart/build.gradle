plugins {
    id 'groovy'
    id('java-library')
    id('maven-publish')
    id('signing')
    //id("se.alipsa.nexus-release-plugin") version "1.0.1"
    id("se.alipsa.nexus-release-plugin") version '2.0.0'
}

group = 'se.alipsa.matrix'
version = '0.2.3-SNAPSHOT'
description = "Groovy library for creating charts with xcharts using matrix ([][] data)"

ext.nexusUrl = version.contains("SNAPSHOT")
    ? "https://oss.sonatype.org/content/repositories/snapshots/"
    : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

repositories {
    if (version.endsWith('SNAPSHOT')) {
        mavenLocal()
    }
    mavenCentral()
}

JavaCompile javaCompile = compileJava {
    options.release = 21
    options.deprecation = true
    options.compilerArgs << "-Xlint:unchecked"
}

compileGroovy {
    options.deprecation = true
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    compileOnly libs.groovy
    compileOnly project(':matrix-core')
    compileOnly project(':matrix-stats')

    api 'org.knowm.xchart:xchart:3.8.8'

    testImplementation testLibs.junitJupiter
    testRuntimeOnly testLibs.junitPlatformLauncher
    testImplementation libs.groovy
    testImplementation project(':matrix-core')
    testImplementation project(':matrix-stats')
    testImplementation project(':matrix-datasets')
    testImplementation(project(':matrix-csv'))
}

test {
    testLogging.showStandardStreams = true
    // run using gradle -Pheadless=true test
    jvmArgs "-Dheadless=${project.hasProperty('headless') ? project.headless : false}"
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'Groovy Matrix XCharts'
                description = "${project.description}"
                url = "https://github.com/Alipsa/matrix/tree/main/matrix-xchart"
                properties = [
                    'maven.compiler.release': "${javaCompile.options.release.get()}"
                ]
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/Alipsa/matrix/matrix-xchart/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'perNyfelt'
                        name = 'Per Nyfelt'
                    }
                }
                scm {
                    url = 'https://github.com/Alipsa/matrix'
                    connection = 'scm:git:https://github.com/Alipsa/matrix.git'
                    developerConnection = 'scm:git:https://github.com/Alipsa/matrix.git'
                }
            }
        }
    }
    if (project.ext.properties.sonatypeUsername) {
        repositories {
            maven {
                credentials {
                    username = sonatypeUsername
                    password = sonatypePassword
                }
                url = nexusUrl
            }
        }
    }
}


signing {
    if (project.properties['signing.keyId'] != null) {
        //project.logger.lifecycle("Signing artifacts...")
        sign publishing.publications.maven
    } else {
        project.logger.lifecycle("signing.keyId is not defined, skipping signing of artifacts...")
    }
}

nexusReleasePlugin {
    userName = project.ext.properties.sonatypeUsername
    password = project.ext.properties.sonatypePassword
    mavenPublication = publishing.publications.maven
}
